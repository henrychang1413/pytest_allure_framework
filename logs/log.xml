<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skipped="0" tests="17" time="0.766"><testcase classname="test_math_algorithm.test_max_product" file="test_math_algorithm\test_max_product.py" line="11" name="test_max_product_from_list" time="0.016"><failure message="AssertionError: expected max product value is 6
assert 2 == 6
  -2
  +6">get_test_product_data = [((1, 2, 3), 6), ((-1, -2, -3), 6), ((-1, 2, 1), 2), ((-3, 2, 8), 24)]

    def test_max_product_from_list(get_test_product_data):
        for ele in get_test_product_data:
            input_list = []
            for node in ele[0]:
                input_list.append(node)
            expected = ele[1]
            log.info(&quot; input list  is %s, expected is %s&quot; % (str(input_list),str(expected)) )
            calc_value = max_product_from_list(input_list)
&gt;           assert calc_value == expected, &apos;expected max product value is %s&apos; %str(expected)
E           AssertionError: expected max product value is 6
E           assert 2 == 6
E             -2
E             +6

tests\test_math_algorithm\test_max_product.py:20: AssertionError</failure></testcase><testcase classname="test_math_algorithm.test_max_product" file="test_math_algorithm\test_max_product.py" line="22" name="test_max_product_from_list_parametrize[input_list0-40]" time="0.000"></testcase><testcase classname="test_math_algorithm.test_max_product" file="test_math_algorithm\test_max_product.py" line="22" name="test_max_product_from_list_parametrize[input_list1-24]" time="0.000"></testcase><testcase classname="test_math_algorithm.test_max_sum" file="test_math_algorithm\test_max_sum.py" line="11" name="test_max_sum_from_list" time="0.016"></testcase><testcase classname="test_math_algorithm.test_max_sum" file="test_math_algorithm\test_max_sum.py" line="21" name="test_max_sum_from_list_parametrize[input_list0-13]" time="0.000"></testcase><testcase classname="test_math_algorithm.test_max_sum" file="test_math_algorithm\test_max_sum.py" line="21" name="test_max_sum_from_list_parametrize[input_list1-10]" time="0.000"></testcase><testcase classname="test_mysql.test_mysql_class.TestJsonData" file="test_mysql\test_mysql_class.py" line="12" name="test_create_table_events" time="0.094"></testcase><testcase classname="test_mysql.test_mysql_class.TestJsonData" file="test_mysql\test_mysql_class.py" line="25" name="test_create_insert_data_to_events" time="0.031"></testcase><testcase classname="test_mysql.test_mysql_class.TestJsonData" file="test_mysql\test_mysql_class.py" line="62" name="test_check_table_events_exists" time="0.000"></testcase><testcase classname="test_mysql.test_mysql_class.TestJsonData" file="test_mysql\test_mysql_class.py" line="74" name="test_check_delete_events_data" time="0.016"></testcase><testcase classname="test_mysql.test_mysql_class.TestJsonData" file="test_mysql\test_mysql_class.py" line="98" name="test_mysql_truncate_all_data_events" time="0.078"></testcase><testcase classname="test_mysql.test_mysql_class.TestJsonData" file="test_mysql\test_mysql_class.py" line="113" name="test_mysql_drop_table_events" time="0.031"></testcase><testcase classname="test_mysql.test_mysql_function" file="test_mysql\test_mysql_function.py" line="10" name="test_mysql_create_table_employee" time="0.062"></testcase><testcase classname="test_mysql.test_mysql_function" file="test_mysql\test_mysql_function.py" line="23" name="test_mysql_insert_data_to_employee" time="0.016"></testcase><testcase classname="test_mysql.test_mysql_function" file="test_mysql\test_mysql_function.py" line="42" name="test_mysql_delete_data_from_employee" time="0.016"></testcase><testcase classname="test_mysql.test_mysql_function" file="test_mysql\test_mysql_function.py" line="57" name="test_mysql_truncate_all_data" time="0.062"></testcase><testcase classname="test_mysql.test_mysql_function" file="test_mysql\test_mysql_function.py" line="72" name="test_mysql_drop_table_employee" time="0.047"></testcase></testsuite>